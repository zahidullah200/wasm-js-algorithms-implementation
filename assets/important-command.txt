-   image convolution:
    -   emcc convolution.c -o convolution.js -s EXPORTED_FUNCTIONS="['_applyConvolution', '_freeMemory']" -s EXTRA_EXPORTED_RUNTIME_METHODS="['ccall', 'cwrap']"  -O2


-   Bubble sort:
    -   emcc bubble.c -o bubble.js -s NO_EXIT_RUNTIME=1 -s EXPORTED_RUNTIME_METHODS=ccall,cwrap

-   Reverse array:
    -   emcc reverse.c -o reverse.js -s NO_EXIT_RUNTIME=1 -s EXPORTED_RUNTIME_METHODS=ccall,cwrap

-   Threshold image processing:
    -   emcc thre.c -o thret.js -s NO_EXIT_RUNTIME=1 -s EXPORTED_RUNTIME_METHODS=ccall,cwrap

-   Fabonacci recursion:
    -   emcc fibo.c -s NO_EXIT_RUNTIME=1 -s EXPORTED_RUNTIME_METHODS=ccall,cwrap -o2

-   quick sort:
    -   emcc quick.c -o quick.js -s NO_EXIT_RUNTIME=1 -s EXPORTED_RUNTIME_METHODS=ccall,cwrap


-   emcc selectionsort.c -o selectionsort.js -s EXPORTED_FUNCTIONS="['_selectionSort', '_malloc', '_free']" -s NO_EXIT_RUNTIME=1 -s EXPORTED_RUNTIME_METHODS=ccall,cwrap  -s MODULARIZE=1 -s "EXPORT_ES6=1"


Completed
-   Time complexity O(1)
    -   summation
    -   Power

-   Cubic Time Complexity (O(n^3))
    -   Cubic Polynomial 
    -   Matrix Multiplication

-   Factorial time complexity (O(n!))
    -   Factorial
    -   permutation

-   Linear Time Complexity (O(n))
    -   Reverse array
    -   Threshold image processing

-   Logarithmic Time Complexity (O(log n))
    -   Binary Search Algorithm
    -   Binary Search on Rotated Sorted Array

-   Loglinear Time Complexity (O(n log n))
    -   image_generation_and_sort
    -   quicksort

-   Quadratic Time Complexity ( O(n^2))
    -   bubble_sort
    -   fibonacci

-   Quartic Time Complexity (O(n^4))
    -   Nested Loop Multiplication
    -   